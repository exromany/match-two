{"version":3,"sources":["models/values.js","models/Tile.js","models/index.js","models/Game.js","components/Card/CardClosed.jsx","components/Card/CardOpened.jsx","components/Card/Card.jsx","components/CardBoard/CardBoard.jsx","components/Panel/formatTime.jsx","components/Panel/Panel.jsx","App.js","index.js"],"names":["VALUES","Array","from","length","v","i","getValues","array","result","j","Math","floor","random","shuffle","map","value","Tile","types","model","string","opened","matched","visible","actions","self","open","getParent","match","close","hide","rootStore","tiles","optional","moves","startedTime","maybeNull","Date","finishedTime","openedTileIndex","number","closeTimer","hideTimer","restart","clearTimeout","tile","now","indexOf","closeAll","checkFinal","setTimeout","hideMatched","except","filter","forEach","every","create","RootStoreContext","createContext","Provider","useMst","store","useContext","Error","CardClosed","sx","background","width","height","CardOpened","Card","onClick","borderRadius","boxShadow","undefined","alignItems","justifyContent","overflow","cursor","userSelect","color","CardBoard","observer","flexWrap","index","p","formatTime","ms","s","m","String","padStart","Panel","useState","timeLeft","setTimeLeft","useEffect","intervalId","setInterval","clearInterval","variant","App","theme","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMACaA,EAASC,MAAMC,KAC3B,CAAEC,OAFmB,KAGrB,SAACC,EAAGC,GAAJ,gBAAcA,EAAC,GAA0B,MAY7BC,EAAY,kBATF,SAACC,GAEvB,IADA,IAAMC,EAAM,YAAOD,GACVF,EAAIG,EAAOL,OAAS,EAAGE,EAAI,EAAGA,IAAK,CAC3C,IAAMI,EAAIC,KAAKC,MAAMD,KAAKE,UAAYP,EAAI,IADC,EAEjB,CAACG,EAAOC,GAAID,EAAOH,IAA3CG,EAAOH,GAFkC,KAE9BG,EAAOC,GAFuB,KAI5C,OAAOD,EAGuBK,CAAQb,GAAQc,KAAI,SAACC,GAAD,MAAY,CAAEA,aCbpDC,EAAOC,IAClBC,MAAM,CACNH,MAAOE,IAAME,OACbC,QAAQ,EACRC,SAAS,EACTC,SAAS,IAETC,SAAQ,SAACC,GAAD,MAAW,CACnBC,KADmB,WAElBD,EAAKJ,QAAS,EACdM,YAAUF,EAAM,GAAGG,MAAMH,IAE1BI,MALmB,WAMlBJ,EAAKJ,QAAS,GAEfS,KARmB,WASlBL,EAAKF,SAAU,OCfLQ,ECCOb,IAClBC,MAAM,CACNa,MAAOd,IAAMe,SAASf,IAAMV,MAAMS,GAAOV,KACzC2B,MAAO,EACPC,YAAajB,IAAMkB,UAAUlB,IAAMmB,MACnCC,aAAcpB,IAAMkB,UAAUlB,IAAMmB,MACpCE,gBAAiBrB,IAAMkB,UAAUlB,IAAMsB,QACvCC,WAAYvB,IAAMkB,UAAUlB,IAAMsB,QAClCE,UAAWxB,IAAMkB,UAAUlB,IAAMsB,UAEjChB,SAAQ,SAACC,GAAD,MAAW,CACnBkB,QADmB,WAElBlB,EAAKO,MAAQzB,IACbkB,EAAKS,MAAQ,EACbT,EAAKU,YAAc,KACnBV,EAAKa,aAAe,KACpBb,EAAKc,gBAAkB,KACvBK,aAAanB,EAAKgB,YAClBG,aAAanB,EAAKiB,YAEnBd,MAVmB,SAUbiB,GAIL,GAHKpB,EAAKU,cACTV,EAAKU,YAAcE,KAAKS,OAEI,OAAzBrB,EAAKc,gBAGR,OAFAd,EAAKc,gBAAkBd,EAAKO,MAAMe,QAAQF,QAC1CpB,EAAKuB,SAASH,GAGf,IAAMxB,EAASI,EAAKO,MAAMP,EAAKc,iBAC3BlB,IAAWwB,IAGfpB,EAAKS,OAAS,EACdT,EAAKc,gBAAkB,KACnBM,EAAK7B,QAAUK,EAAOL,OACzB6B,EAAKvB,SAAU,EACfD,EAAOC,SAAU,EACjBG,EAAKwB,aACLxB,EAAKiB,UAAYQ,WAAWzB,EAAK0B,YAAa,MAE9C1B,EAAKgB,WAAaS,WAAWzB,EAAKuB,SAAU,QAG9CA,SAlCmB,SAkCVI,GACRR,aAAanB,EAAKgB,YAClBhB,EAAKO,MAAMqB,QAAO,SAACR,GAAD,OAAUA,IAASO,KAAQE,SAAQ,SAACT,GAAD,OAAUA,EAAKhB,YAErEsB,YAtCmB,WAuClB1B,EAAKO,MAAMqB,QAAO,SAACR,GAAD,OAAUA,EAAKvB,WAASgC,SAAQ,SAACT,GAAD,OAAUA,EAAKf,WAElEmB,WAzCmB,YA0CbxB,EAAKa,cAAgBb,EAAKO,MAAMuB,OAAM,qBAAGjC,aAC7CG,EAAKa,aAAeD,KAAKS,YDtDCU,SAExBC,EAAmBC,wBAAc,MAE1BC,EAAWF,EAAiBE,SAElC,SAASC,IACf,IAAMC,EAAQC,qBAAWL,GACzB,GAAc,OAAVI,EACH,MAAM,IAAIE,MAAM,uDAEjB,OAAOF,E,0BEZKG,EAAa,WACzB,OAAO,cAAC,IAAD,CAAKC,GAAI,CAAEC,WAAY,UAAWC,MAAO,OAAQC,OAAQ,WCDpDC,EAAa,SAAC,GAAe,IAAbrD,EAAY,EAAZA,MAC5B,OACC,cAAC,IAAD,UACC,cAAC,IAAD,UAAOA,OCDGsD,EAAO,SAAC,GAAkD,IAAhDtD,EAA+C,EAA/CA,MAAOK,EAAwC,EAAxCA,OAAQC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,QAASgD,EAAc,EAAdA,QACvD,OACC,cAAC,IAAD,CACCN,GAAI,CACHG,OAAQ,GACRI,aAAc,EACdC,UAAWlD,EAAU,mCAAgCmD,EACrDC,WAAY,SACZC,eAAgB,SAChBC,SAAU,SACVC,OAAQvD,EAAU,eAAYmD,EAC9BK,WAAY,OACZC,MAAO1D,EAAU,MAAQ,SAE1BiD,QAASA,EAZV,SAcEhD,IAAYF,EAAS,cAAC,EAAD,CAAYL,MAAOA,IAAY,cAAC,EAAD,QCf3CiE,EAAYC,aAAS,WAAO,IAChClD,EAAU4B,IAAV5B,MAER,OACC,cAAC,IAAD,CAAMmD,SAAS,OAAf,SACEnD,EAAMjB,KAAI,SAAC8B,EAAMuC,GAAP,OACV,cAAC,IAAD,CAAoCjB,MAAO,EAAI,EAAGkB,EAAG,EAArD,SACC,cAAC,EAAD,CACCrE,MAAO6B,EAAK7B,MACZK,OAAQwB,EAAKxB,OACbC,QAASuB,EAAKvB,QACdC,QAASsB,EAAKtB,QACdgD,QAAS,kBAAM1B,EAAKnB,WANtB,UAAamB,EAAK7B,MAAlB,YAA2BoE,Y,QCXlBE,EAAa,SAACC,GAC1B,IAAMC,EAAI7E,KAAKC,MAAM2E,EAAK,KAAQ,GAC5BE,EAAI9E,KAAKC,MAAM2E,EAAK,IAAO,IACjC,MAAM,GAAN,OAAUG,OAAOD,GAAGE,SAAS,EAAG,GAAhC,YAAsCD,OAAOF,GAAGG,SAAS,EAAG,KCGhDC,EAAQV,aAAS,WAAO,IAAD,EACmBtB,IAA9C1B,EAD2B,EAC3BA,MAAOC,EADoB,EACpBA,YAAaG,EADO,EACPA,aAAcK,EADP,EACOA,QADP,EAEHkD,mBAAS,GAFN,mBAE5BC,EAF4B,KAElBC,EAFkB,KA0BnC,OAtBAC,qBAAU,WACT,GAAK7D,IAAeG,EAApB,CAIA,IAAM2D,EAAaC,aAAY,WAC9B,IAAMX,EAAKlD,KAAKS,MAAQX,EACxB4D,EAAYR,KACV,KAEH,OAAO,kBAAMY,cAAcF,OACzB,CAAC9D,EAAaG,IAEjB0D,qBAAU,WACL7D,GAAeG,EAElByD,EADWzD,EAAeH,GAG1B4D,EAAY,KAEX,CAAC5D,EAAaG,IAGhB,eAAC,IAAD,CAAK+C,EAAG,EAAR,UACC,cAAC,IAAD,UACC,eAAC,IAAD,oBAAaC,EAAWQ,QAEzB,cAAC,IAAD,UACC,eAAC,IAAD,qBAAc5D,OAEdI,GACA,cAAC,IAAD,UACC,cAAC,IAAD,CAAQ8D,QAAQ,UAAU7B,QAAS5B,EAAnC,iCCzBU0D,MAXf,WACC,OACC,cAAC,IAAD,CAAeC,MAAOA,IAAtB,SACC,eAAC3C,EAAD,CAAU3C,MAAOe,EAAjB,UACC,cAACkD,EAAD,IACA,cAACW,EAAD,UCPJW,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.d2b33647.chunk.js","sourcesContent":["const VALUES_LENGTH = 36\nexport const VALUES = Array.from(\n\t{ length: VALUES_LENGTH },\n\t(v, i) => `${(i % (VALUES_LENGTH / 2)) + 1}`\n)\n\nexport const shuffle = (array) => {\n\tconst result = [...array]\n\tfor (let i = result.length - 1; i > 0; i--) {\n\t\tconst j = Math.floor(Math.random() * (i + 1))\n\t\t;[result[i], result[j]] = [result[j], result[i]]\n\t}\n\treturn result\n}\n\nexport const getValues = () => shuffle(VALUES).map((value) => ({ value }))\n","import { getParent, types } from \"mobx-state-tree\"\n\nexport const Tile = types\n\t.model({\n\t\tvalue: types.string,\n\t\topened: false,\n\t\tmatched: false,\n\t\tvisible: true,\n\t})\n\t.actions((self) => ({\n\t\topen() {\n\t\t\tself.opened = true\n\t\t\tgetParent(self, 2).match(self)\n\t\t},\n\t\tclose() {\n\t\t\tself.opened = false\n\t\t},\n\t\thide() {\n\t\t\tself.visible = false\n\t\t},\n\t}))\n","import { useContext, createContext } from \"react\"\nimport { Game } from \"./Game\"\n\nexport const rootStore = Game.create()\n\nconst RootStoreContext = createContext(null)\n\nexport const Provider = RootStoreContext.Provider\n\nexport function useMst() {\n\tconst store = useContext(RootStoreContext)\n\tif (store === null) {\n\t\tthrow new Error(\"Store cannot be null, please add a context provider\")\n\t}\n\treturn store\n}\n","import { types } from \"mobx-state-tree\"\nimport { getValues } from \"./values\"\nimport { Tile } from \"./Tile\"\n\nexport const Game = types\n\t.model({\n\t\ttiles: types.optional(types.array(Tile), getValues()),\n\t\tmoves: 0,\n\t\tstartedTime: types.maybeNull(types.Date),\n\t\tfinishedTime: types.maybeNull(types.Date),\n\t\topenedTileIndex: types.maybeNull(types.number),\n\t\tcloseTimer: types.maybeNull(types.number),\n\t\thideTimer: types.maybeNull(types.number),\n\t})\n\t.actions((self) => ({\n\t\trestart() {\n\t\t\tself.tiles = getValues()\n\t\t\tself.moves = 0\n\t\t\tself.startedTime = null\n\t\t\tself.finishedTime = null\n\t\t\tself.openedTileIndex = null\n\t\t\tclearTimeout(self.closeTimer)\n\t\t\tclearTimeout(self.hideTimer)\n\t\t},\n\t\tmatch(tile) {\n\t\t\tif (!self.startedTime) {\n\t\t\t\tself.startedTime = Date.now()\n\t\t\t}\n\t\t\tif (self.openedTileIndex === null) {\n\t\t\t\tself.openedTileIndex = self.tiles.indexOf(tile)\n\t\t\t\tself.closeAll(tile)\n\t\t\t\treturn\n\t\t\t}\n\t\t\tconst opened = self.tiles[self.openedTileIndex]\n\t\t\tif (opened === tile) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tself.moves += 1\n\t\t\tself.openedTileIndex = null\n\t\t\tif (tile.value === opened.value) {\n\t\t\t\ttile.matched = true\n\t\t\t\topened.matched = true\n\t\t\t\tself.checkFinal()\n\t\t\t\tself.hideTimer = setTimeout(self.hideMatched, 500)\n\t\t\t} else {\n\t\t\t\tself.closeTimer = setTimeout(self.closeAll, 1500)\n\t\t\t}\n\t\t},\n\t\tcloseAll(except) {\n\t\t\tclearTimeout(self.closeTimer)\n\t\t\tself.tiles.filter((tile) => tile !== except).forEach((tile) => tile.close())\n\t\t},\n\t\thideMatched() {\n\t\t\tself.tiles.filter((tile) => tile.matched).forEach((tile) => tile.hide())\n\t\t},\n\t\tcheckFinal() {\n\t\t\tif (!self.finishedTime && self.tiles.every(({ matched }) => matched)) {\n\t\t\t\tself.finishedTime = Date.now()\n\t\t\t}\n\t\t},\n\t}))\n","import { Box } from \"rebass\"\n\nexport const CardClosed = () => {\n\treturn <Box sx={{ background: \"#c7d1ec\", width: \"100%\", height: \"100%\" }}></Box>\n}\n","import { Box, Text } from \"rebass\"\n\nexport const CardOpened = ({ value }) => {\n\treturn (\n\t\t<Box>\n\t\t\t<Text>{value}</Text>\n\t\t</Box>\n\t)\n}\n","import { Flex } from \"rebass\"\nimport { CardClosed } from \"./CardClosed\"\nimport { CardOpened } from \"./CardOpened\"\n\nexport const Card = ({ value, opened, matched, visible, onClick }) => {\n\treturn (\n\t\t<Flex\n\t\t\tsx={{\n\t\t\t\theight: 80,\n\t\t\t\tborderRadius: 4,\n\t\t\t\tboxShadow: visible ? \"0 0 2px rgba(0, 0, 0, .125)\" : undefined,\n\t\t\t\talignItems: \"center\",\n\t\t\t\tjustifyContent: \"center\",\n\t\t\t\toverflow: \"hidden\",\n\t\t\t\tcursor: visible ? \"pointer\" : undefined,\n\t\t\t\tuserSelect: \"none\",\n\t\t\t\tcolor: matched ? \"red\" : \"black\",\n\t\t\t}}\n\t\t\tonClick={onClick}\n\t\t>\n\t\t\t{visible && (opened ? <CardOpened value={value} /> : <CardClosed />)}\n\t\t</Flex>\n\t)\n}\n","import { Flex, Box } from \"rebass\"\nimport { observer } from \"mobx-react-lite\"\nimport { Card } from \"../Card\"\nimport { useMst } from \"../../models\"\n\nexport const CardBoard = observer(() => {\n\tconst { tiles } = useMst()\n\n\treturn (\n\t\t<Flex flexWrap='wrap'>\n\t\t\t{tiles.map((tile, index) => (\n\t\t\t\t<Box key={`${tile.value}-${index}`} width={1 / 6} p={2}>\n\t\t\t\t\t<Card\n\t\t\t\t\t\tvalue={tile.value}\n\t\t\t\t\t\topened={tile.opened}\n\t\t\t\t\t\tmatched={tile.matched}\n\t\t\t\t\t\tvisible={tile.visible}\n\t\t\t\t\t\tonClick={() => tile.open()}\n\t\t\t\t\t/>\n\t\t\t\t</Box>\n\t\t\t))}\n\t\t</Flex>\n\t)\n})\n","export const formatTime = (ms) => {\n\tconst s = Math.floor(ms / 1000) % 60\n\tconst m = Math.floor(ms / 1000 / 60)\n\treturn `${String(m).padStart(2, 0)}:${String(s).padStart(2, 0)}`\n}\n","import { useEffect, useState } from \"react\"\nimport { Box, Button, Text } from \"rebass\"\nimport { observer } from \"mobx-react-lite\"\nimport { useMst } from \"../../models/index\"\nimport { formatTime } from \"./formatTime\"\n\nexport const Panel = observer(() => {\n\tconst { moves, startedTime, finishedTime, restart } = useMst()\n\tconst [timeLeft, setTimeLeft] = useState(0)\n\n\tuseEffect(() => {\n\t\tif (!startedTime || finishedTime) {\n\t\t\treturn\n\t\t}\n\n\t\tconst intervalId = setInterval(() => {\n\t\t\tconst ms = Date.now() - startedTime\n\t\t\tsetTimeLeft(ms)\n\t\t}, 200)\n\n\t\treturn () => clearInterval(intervalId)\n\t}, [startedTime, finishedTime])\n\n\tuseEffect(() => {\n\t\tif (startedTime && finishedTime) {\n\t\t\tconst ms = finishedTime - startedTime\n\t\t\tsetTimeLeft(ms)\n\t\t} else {\n\t\t\tsetTimeLeft(0)\n\t\t}\n\t}, [startedTime, finishedTime])\n\n\treturn (\n\t\t<Box p={2}>\n\t\t\t<Box>\n\t\t\t\t<Text>time: {formatTime(timeLeft)}</Text>\n\t\t\t</Box>\n\t\t\t<Box>\n\t\t\t\t<Text>moves: {moves}</Text>\n\t\t\t</Box>\n\t\t\t{finishedTime && (\n\t\t\t\t<Box>\n\t\t\t\t\t<Button variant='primary' onClick={restart}>\n\t\t\t\t\t\tStart again\n\t\t\t\t\t</Button>\n\t\t\t\t</Box>\n\t\t\t)}\n\t\t</Box>\n\t)\n})\n","import { ThemeProvider } from \"emotion-theming\"\nimport theme from \"@rebass/preset\"\nimport { Provider, rootStore } from \"./models\"\nimport { CardBoard } from \"./components/CardBoard\"\nimport { Panel } from \"./components/Panel\"\n\nfunction App() {\n\treturn (\n\t\t<ThemeProvider theme={theme}>\n\t\t\t<Provider value={rootStore}>\n\t\t\t\t<CardBoard />\n\t\t\t\t<Panel />\n\t\t\t</Provider>\n\t\t</ThemeProvider>\n\t)\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n)\n"],"sourceRoot":""}